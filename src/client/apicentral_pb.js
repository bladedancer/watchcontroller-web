/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.central.events.v1.datamodel.Metadata', null, global);
goog.exportSymbol('proto.central.events.v1.datamodel.Metadata.ScopeKind', null, global);
goog.exportSymbol('proto.central.events.v1.datamodel.Owner', null, global);
goog.exportSymbol('proto.central.events.v1.datamodel.Owner.Type', null, global);
goog.exportSymbol('proto.central.events.v1.datamodel.Reference', null, global);
goog.exportSymbol('proto.central.events.v1.datamodel.Reference.Type', null, global);
goog.exportSymbol('proto.central.events.v1.datamodel.ResourceInstance', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.central.events.v1.datamodel.ResourceInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.central.events.v1.datamodel.ResourceInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.central.events.v1.datamodel.ResourceInstance.displayName = 'proto.central.events.v1.datamodel.ResourceInstance';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.central.events.v1.datamodel.ResourceInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.central.events.v1.datamodel.ResourceInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.ResourceInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    metadata: (f = msg.getMetadata()) && proto.central.events.v1.datamodel.Metadata.toObject(includeInstance, f),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.central.events.v1.datamodel.ResourceInstance}
 */
proto.central.events.v1.datamodel.ResourceInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.central.events.v1.datamodel.ResourceInstance;
  return proto.central.events.v1.datamodel.ResourceInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.central.events.v1.datamodel.ResourceInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.central.events.v1.datamodel.ResourceInstance}
 */
proto.central.events.v1.datamodel.ResourceInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = new proto.central.events.v1.datamodel.Metadata;
      reader.readMessage(value,proto.central.events.v1.datamodel.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 6:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.central.events.v1.datamodel.ResourceInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.central.events.v1.datamodel.ResourceInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.ResourceInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.central.events.v1.datamodel.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string group = 1;
 * @return {string}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.ResourceInstance.prototype.setGroup = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string kind = 2;
 * @return {string}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.ResourceInstance.prototype.setKind = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.ResourceInstance.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Metadata metadata = 5;
 * @return {?proto.central.events.v1.datamodel.Metadata}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.getMetadata = function() {
  return /** @type{?proto.central.events.v1.datamodel.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.central.events.v1.datamodel.Metadata, 5));
};


/** @param {?proto.central.events.v1.datamodel.Metadata|undefined} value */
proto.central.events.v1.datamodel.ResourceInstance.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.central.events.v1.datamodel.ResourceInstance.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> attributes = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.central.events.v1.datamodel.ResourceInstance.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


proto.central.events.v1.datamodel.ResourceInstance.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.central.events.v1.datamodel.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.central.events.v1.datamodel.Metadata.repeatedFields_, null);
};
goog.inherits(proto.central.events.v1.datamodel.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.central.events.v1.datamodel.Metadata.displayName = 'proto.central.events.v1.datamodel.Metadata';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.central.events.v1.datamodel.Metadata.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.central.events.v1.datamodel.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.central.events.v1.datamodel.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.central.events.v1.datamodel.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scope: (f = msg.getScope()) && proto.central.events.v1.datamodel.Metadata.ScopeKind.toObject(includeInstance, f),
    selflink: jspb.Message.getFieldWithDefault(msg, 6, ""),
    referencesList: jspb.Message.toObjectList(msg.getReferencesList(),
    proto.central.events.v1.datamodel.Reference.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.central.events.v1.datamodel.Metadata}
 */
proto.central.events.v1.datamodel.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.central.events.v1.datamodel.Metadata;
  return proto.central.events.v1.datamodel.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.central.events.v1.datamodel.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.central.events.v1.datamodel.Metadata}
 */
proto.central.events.v1.datamodel.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.central.events.v1.datamodel.Metadata.ScopeKind;
      reader.readMessage(value,proto.central.events.v1.datamodel.Metadata.ScopeKind.deserializeBinaryFromReader);
      msg.setScope(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelflink(value);
      break;
    case 7:
      var value = new proto.central.events.v1.datamodel.Reference;
      reader.readMessage(value,proto.central.events.v1.datamodel.Reference.deserializeBinaryFromReader);
      msg.addReferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.central.events.v1.datamodel.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.central.events.v1.datamodel.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.central.events.v1.datamodel.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScope();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.central.events.v1.datamodel.Metadata.ScopeKind.serializeBinaryToWriter
    );
  }
  f = message.getSelflink();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReferencesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.central.events.v1.datamodel.Reference.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.central.events.v1.datamodel.Metadata.ScopeKind, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.central.events.v1.datamodel.Metadata.ScopeKind.displayName = 'proto.central.events.v1.datamodel.Metadata.ScopeKind';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.toObject = function(opt_includeInstance) {
  return proto.central.events.v1.datamodel.Metadata.ScopeKind.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.central.events.v1.datamodel.Metadata.ScopeKind} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    selflink: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.central.events.v1.datamodel.Metadata.ScopeKind}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.central.events.v1.datamodel.Metadata.ScopeKind;
  return proto.central.events.v1.datamodel.Metadata.ScopeKind.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.central.events.v1.datamodel.Metadata.ScopeKind} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.central.events.v1.datamodel.Metadata.ScopeKind}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelflink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.central.events.v1.datamodel.Metadata.ScopeKind.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.central.events.v1.datamodel.Metadata.ScopeKind} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSelflink();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string kind = 2;
 * @return {string}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.setKind = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string selfLink = 4;
 * @return {string}
 */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.getSelflink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Metadata.ScopeKind.prototype.setSelflink = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.central.events.v1.datamodel.Metadata.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Metadata.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ScopeKind scope = 2;
 * @return {?proto.central.events.v1.datamodel.Metadata.ScopeKind}
 */
proto.central.events.v1.datamodel.Metadata.prototype.getScope = function() {
  return /** @type{?proto.central.events.v1.datamodel.Metadata.ScopeKind} */ (
    jspb.Message.getWrapperField(this, proto.central.events.v1.datamodel.Metadata.ScopeKind, 2));
};


/** @param {?proto.central.events.v1.datamodel.Metadata.ScopeKind|undefined} value */
proto.central.events.v1.datamodel.Metadata.prototype.setScope = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.central.events.v1.datamodel.Metadata.prototype.clearScope = function() {
  this.setScope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.central.events.v1.datamodel.Metadata.prototype.hasScope = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string selfLink = 6;
 * @return {string}
 */
proto.central.events.v1.datamodel.Metadata.prototype.getSelflink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Metadata.prototype.setSelflink = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Reference references = 7;
 * @return {!Array<!proto.central.events.v1.datamodel.Reference>}
 */
proto.central.events.v1.datamodel.Metadata.prototype.getReferencesList = function() {
  return /** @type{!Array<!proto.central.events.v1.datamodel.Reference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.central.events.v1.datamodel.Reference, 7));
};


/** @param {!Array<!proto.central.events.v1.datamodel.Reference>} value */
proto.central.events.v1.datamodel.Metadata.prototype.setReferencesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.central.events.v1.datamodel.Reference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.central.events.v1.datamodel.Reference}
 */
proto.central.events.v1.datamodel.Metadata.prototype.addReferences = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.central.events.v1.datamodel.Reference, opt_index);
};


proto.central.events.v1.datamodel.Metadata.prototype.clearReferencesList = function() {
  this.setReferencesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.central.events.v1.datamodel.Owner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.central.events.v1.datamodel.Owner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.central.events.v1.datamodel.Owner.displayName = 'proto.central.events.v1.datamodel.Owner';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.central.events.v1.datamodel.Owner.prototype.toObject = function(opt_includeInstance) {
  return proto.central.events.v1.datamodel.Owner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.central.events.v1.datamodel.Owner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Owner.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.central.events.v1.datamodel.Owner}
 */
proto.central.events.v1.datamodel.Owner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.central.events.v1.datamodel.Owner;
  return proto.central.events.v1.datamodel.Owner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.central.events.v1.datamodel.Owner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.central.events.v1.datamodel.Owner}
 */
proto.central.events.v1.datamodel.Owner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.central.events.v1.datamodel.Owner.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.central.events.v1.datamodel.Owner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.central.events.v1.datamodel.Owner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.central.events.v1.datamodel.Owner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Owner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.central.events.v1.datamodel.Owner.Type = {
  TEAM: 0
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.central.events.v1.datamodel.Owner.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Owner.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.central.events.v1.datamodel.Owner.Type}
 */
proto.central.events.v1.datamodel.Owner.prototype.getType = function() {
  return /** @type {!proto.central.events.v1.datamodel.Owner.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.central.events.v1.datamodel.Owner.Type} value */
proto.central.events.v1.datamodel.Owner.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.central.events.v1.datamodel.Reference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.central.events.v1.datamodel.Reference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.central.events.v1.datamodel.Reference.displayName = 'proto.central.events.v1.datamodel.Reference';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.central.events.v1.datamodel.Reference.prototype.toObject = function(opt_includeInstance) {
  return proto.central.events.v1.datamodel.Reference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.central.events.v1.datamodel.Reference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Reference.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    scopekind: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scopename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    selflink: jspb.Message.getFieldWithDefault(msg, 6, ""),
    type: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.central.events.v1.datamodel.Reference}
 */
proto.central.events.v1.datamodel.Reference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.central.events.v1.datamodel.Reference;
  return proto.central.events.v1.datamodel.Reference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.central.events.v1.datamodel.Reference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.central.events.v1.datamodel.Reference}
 */
proto.central.events.v1.datamodel.Reference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScopekind(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScopename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelflink(value);
      break;
    case 7:
      var value = /** @type {!proto.central.events.v1.datamodel.Reference.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.central.events.v1.datamodel.Reference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.central.events.v1.datamodel.Reference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.central.events.v1.datamodel.Reference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.central.events.v1.datamodel.Reference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScopekind();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScopename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSelflink();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.central.events.v1.datamodel.Reference.Type = {
  SOFT: 0,
  HARD: 1
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.central.events.v1.datamodel.Reference.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Reference.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string kind = 2;
 * @return {string}
 */
proto.central.events.v1.datamodel.Reference.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Reference.prototype.setKind = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.central.events.v1.datamodel.Reference.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Reference.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scopeKind = 4;
 * @return {string}
 */
proto.central.events.v1.datamodel.Reference.prototype.getScopekind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Reference.prototype.setScopekind = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string scopeName = 5;
 * @return {string}
 */
proto.central.events.v1.datamodel.Reference.prototype.getScopename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Reference.prototype.setScopename = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string selfLink = 6;
 * @return {string}
 */
proto.central.events.v1.datamodel.Reference.prototype.getSelflink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.central.events.v1.datamodel.Reference.prototype.setSelflink = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Type type = 7;
 * @return {!proto.central.events.v1.datamodel.Reference.Type}
 */
proto.central.events.v1.datamodel.Reference.prototype.getType = function() {
  return /** @type {!proto.central.events.v1.datamodel.Reference.Type} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.central.events.v1.datamodel.Reference.Type} value */
proto.central.events.v1.datamodel.Reference.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};


goog.object.extend(exports, proto.central.events.v1.datamodel);
